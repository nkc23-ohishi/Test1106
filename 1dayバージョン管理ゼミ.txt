//--------------------------------------------------------------------------------------------------
// １．リモートリポジトリの作成
//--------------------------------------------------------------------------------------------------
手順１．Githubにログイン　https://github.com/

手順２．「Home」ページ左にある、【Top repositories】の【New】をクリック
　　　　Repository name → Test1107
　　　  Description     → このリポジトリの説明文（空白でおｋ）
　　　  Public          → 練習用なのでPublicでＯＫ
　　　  Add .gitignore  → Unityを検索して選択
　　　  緑色のボタン【Create repository】をクリック

手順３．緑色のボタン【Code】をクリックし、HTTPSのURLをコピーしてメモ帳に保存しておく
　　　　例）https://github.com/nkc23-ohishi/Test1107.git

//--------------------------------------------------------------------------------------------------
// ２．リモートリポジトリをローカルリポジトリにクローン
//--------------------------------------------------------------------------------------------------
手順１．SourceTreeをダウンロードしてインストールをする
　　　　https://www.sourcetreeapp.com/
　　　　
　　　　Registration → スキップ
　　　　Pick tools to download and install → 次へ
　　　　Preferences → アカウント名とgithubのメールアドレスを入力して次へ
　　　　SSHキーを読み込みますか？ → いいえ

手順２．タブのプラスの記号をクリックして新しいタブを作成

手順３．「Clone」のアイコンをクリック

手順４．元のパスに、リモートリポジトリのURL（https://github.com/nkc23-ohishi/Test1107.git）をペースト
　　　　※ 「これはGitリポジトリです」と出ればOK

手順５．保存先のパスに、「C:\Github\Test1107」を入力し、クローンをクリック
　　　　※ C:\Github\Test1107のフォルダを作る
　　　　※ フォルダ内の【.git】と【.gitignore】は消してはダメ

//--------------------------------------------------------------------------------------------------
// ３．Unityプロジェクトの作成＆作成したUnityプロジェクトをローカルリポジトリにコピー
//--------------------------------------------------------------------------------------------------
手順１．プロジェクト名　Test1107
　　　　テンプレート　　２Ⅾ
　　　　場所　　　　　　デスクトップ

手順２．デスクトップに作成したプロジェクトフォルダ内のファイルを【C:\Github\Test1107】へコピー

//--------------------------------------------------------------------------------------------------
// ４．ローカルリポジトリの変更内容をリモートリポジトリへ反映（コミット）
//--------------------------------------------------------------------------------------------------
手順１．SourceTreeの「作業ツリーのファイル」と「Indexにステージしたファイル」の間にある
　　　【全てインデックスに追加】ボタンをクリックする

手順２．下のテキストボックスに「プロジェクト作成」とコメントを入力し、
　　　　【変更をすぐにorigin/main にプッシュする】にチェックを入れて、
　　　　右下の【コミット】ボタンをクリック

※ githubのリモートリポジトリのページを更新すると、コミットしたファイルが追加されている

用語
リポジトリ　　　　：貯蔵庫、倉庫といった意味。ファイルを保管しておくフォルダの名前みたいなもの
ローカルリポジトリ：PC本体に保存されているリポジトリ
リモートリポジトリ：クラウドない（github内）に保存されているリポジトリ
コミット　　　　　：現在の作業状態を記録していく作業
インデックス　　　：リモートリポジトリに引き渡すファイルの一覧
プッシュ　　　　　：ローカルからリモートへデータを送信する作業
プル　　　　　　　：リモートからローカルへデータを送信する作業
フェッチ　　　　　：変更箇所を検出する作業（このゼミでは説明しない）
ブランチ　　　　　：作業を分けて行うときに利用（このゼミでは説明しない）
マージ　　　　　　：別々で行てきた作業を結合する（このゼミでは説明しない）

//--------------------------------------------------------------------------------------------------
// ５．コラボレーター（共同編集者）の登録
//--------------------------------------------------------------------------------------------------
手順１．githubのリモートリポジトリページののSettings のタブをクリック

手順２．左上 Access - Collaborators をクリック

手順３．緑色のボタン【Add people】をクリック

手順４．Find peopleに【nkc23-ohishi】を入力

手順５．候補の中から選択して、【Add nkc23-ohishi to this repository】をクリック

※ コラボレーターにメールが届き、メール内の【View invitation】をクリックし、
　【Accept invitation】をクリックすると登録完了
　
//--------------------------------------------------------------------------------------------------
// ６．リーダーのリモートリポジトリをクローン
//--------------------------------------------------------------------------------------------------
手順１．２人１組のペアを作りリーダを決める

手順２．リーダーはメンバーを自分のリモートリポジトリにコラボレーター登録する

手順３．メンバーはメールを開き、コラボレーターを承認する

手順４．メンバーは、コラボレーター承認後、リーダーのリモートリポジトリのURLをコピーし、
　　　　SourceTreeを使ってローカルリポジトリにクローンする

//--------------------------------------------------------------------------------------------------
// ７．共同編集
//--------------------------------------------------------------------------------------------------
手順１．リーダーが編集を行い、コミット

手順２．メンバーは自分の編集をコミットする前に、プルを行いローカルを更新

手順３．メンバーがプルした後自分の編集内容をコミット

手順４．リーダーがプルを行い、メンバーの編集内容をローカルへ反映

※ このゼミの内容はここまでとなります。



